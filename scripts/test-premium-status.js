console.log('üëë Testando status premium...\n')

// Simular diferentes cen√°rios de usu√°rio
const testUsers = [
  {
    name: 'Usu√°rio N√£o Logado',
    session: null,
    expected: 'N√£o premium (n√£o autenticado)'
  },
  {
    name: 'Usu√°rio Gratuito',
    session: { user: { email: 'user@example.com' } },
    premium: false,
    expireDate: null,
    expected: 'N√£o premium (usu√°rio gratuito)'
  },
  {
    name: 'Usu√°rio Premium Ativo',
    session: { user: { email: 'premium@example.com' } },
    premium: true,
    expireDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 dias no futuro
    expected: 'Premium ativo'
  },
  {
    name: 'Usu√°rio Premium Expirado',
    session: { user: { email: 'expired@example.com' } },
    premium: true,
    expireDate: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000), // 1 dia no passado
    expected: 'N√£o premium (assinatura expirada)'
  },
  {
    name: 'Usu√°rio Premium Sem Data de Expira√ß√£o',
    session: { user: { email: 'lifetime@example.com' } },
    premium: true,
    expireDate: null,
    expected: 'Premium ativo (vital√≠cio)'
  }
]

// Simular a l√≥gica da API de status premium
function simulatePremiumStatus(user) {
  if (!user.session) {
    return {
      isPremium: false,
      message: 'Usu√°rio n√£o autenticado'
    }
  }

  if (!user.premium) {
    return {
      isPremium: false,
      message: 'Usu√°rio n√£o premium'
    }
  }

  // Verificar se a assinatura n√£o expirou
  if (user.expireDate && new Date() > user.expireDate) {
    return {
      isPremium: false,
      message: 'Assinatura expirada'
    }
  }

  return {
    isPremium: true,
    message: 'Usu√°rio premium ativo'
  }
}

// Simular a l√≥gica do VideoCard
function simulateVideoCardBehavior(user, videoPremium = true) {
  const status = simulatePremiumStatus(user)
  
  console.log(`\nüé¨ V√≠deo ${videoPremium ? 'Premium' : 'Gratuito'}:`)
  
  if (videoPremium) {
    if (status.isPremium) {
      console.log('   ‚úÖ V√≠deo desbloqueado (usu√°rio premium)')
      console.log('   ‚úÖ Bot√µes de a√ß√£o vis√≠veis')
      console.log('   ‚úÖ Sem overlay de cadeado')
    } else {
      console.log('   üîí V√≠deo bloqueado (usu√°rio n√£o premium)')
      console.log('   ‚ùå Bot√µes de a√ß√£o ocultos')
      console.log('   üîí Overlay de cadeado vis√≠vel')
      console.log('   üîÑ Redireciona para /premium ao clicar')
    }
  } else {
    console.log('   ‚úÖ V√≠deo gratuito (acess√≠vel a todos)')
    console.log('   ‚úÖ Bot√µes de a√ß√£o vis√≠veis')
    console.log('   ‚úÖ Sem overlay de cadeado')
  }
}

console.log('üìä Testando cen√°rios de status premium:')
console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ')

testUsers.forEach(user => {
  console.log(`\nüë§ ${user.name}:`)
  console.log(`   ‚îî‚îÄ Esperado: ${user.expected}`)
  
  const status = simulatePremiumStatus(user)
  
  console.log(`\n   üìã Status:`)
  console.log(`   Premium: ${status.isPremium ? 'Sim' : 'N√£o'}`)
  console.log(`   Mensagem: ${status.message}`)
  
  if (user.premium !== undefined) {
    console.log(`   Configura√ß√£o: premium=${user.premium}`)
    if (user.expireDate) {
      console.log(`   Expira em: ${user.expireDate.toLocaleDateString()}`)
    } else {
      console.log(`   Expira em: Vital√≠cio`)
    }
  }
  
  // Testar comportamento do VideoCard
  simulateVideoCardBehavior(user, true) // V√≠deo premium
  simulateVideoCardBehavior(user, false) // V√≠deo gratuito
})

console.log('\nüéØ Problemas identificados e corrigidos:')
console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ')
console.log('‚úÖ VideoCard agora aguarda carregamento do status premium')
console.log('‚úÖ Overlay de cadeado s√≥ aparece ap√≥s carregamento')
console.log('‚úÖ Bot√µes de a√ß√£o ficam vis√≠veis durante carregamento')
console.log('‚úÖ Indicador "Premium" s√≥ aparece ap√≥s carregamento')
console.log('')

console.log('üîß Como testar:')
console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ')
console.log('1. Fa√ßa login com usu√°rio premium')
console.log('   ‚Üí V√≠deos premium devem aparecer sem cadeado')
console.log('')
console.log('2. Fa√ßa login com usu√°rio gratuito')
console.log('   ‚Üí V√≠deos premium devem aparecer com cadeado')
console.log('')
console.log('3. Acesse sem estar logado')
console.log('   ‚Üí V√≠deos premium devem aparecer com cadeado')
console.log('')
console.log('4. Teste a API diretamente:')
console.log('   fetch("/api/user/premium-status").then(r => r.json()).then(console.log)')
console.log('')
console.log('5. Verifique no console do navegador:')
console.log('   - Se h√° erros na API de status premium')
console.log('   - Se o hook usePremiumStatus est√° funcionando')
console.log('   - Se o estado loading est√° sendo respeitado')
console.log('') 